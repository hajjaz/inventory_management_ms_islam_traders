/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dashboard;

import Utilities.Utilities;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import restaurantpos.AdminForm;
import restaurantpos.DBGateway;
import restaurantpos.DatabaseUtils;

/**
 *
 * @author Hajjaz Bin Ibrahim
 */
public class DashBoard extends javax.swing.JFrame {

    public DBGateway dbg;;
    Connection connection = null;
    int RowNo, rowIncrementer;
    Double grossTP1;
    /**
     * Creates new form MainFrame
     */
    public DashBoard() {
        this.dbg = new DBGateway();
        
            initComponents();
            customizeTable();
            connection = dbg.connectionTest();
            
            jDateChooser1.setDate(Calendar.getInstance().getTime());
        jDateChooser2.setDate(Calendar.getInstance().getTime());
        btnShow.doClick();
    }
    
    private void customizeTable(){
        final Color colorSkyBlue = new Color(135, 206, 235);
        JTableHeader header = jTable2.getTableHeader();
        header.setBackground(colorSkyBlue);
        header.setForeground(Color.WHITE);
      
      jTable2.setDefaultRenderer(Object.class, new TableCellRenderer(){
            private DefaultTableCellRenderer DEFAULT_RENDERER =  new DefaultTableCellRenderer();
            Color alternateColor = new Color(216,236,249);
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = DEFAULT_RENDERER.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if(isSelected){
                    c.setBackground(colorSkyBlue);
                }else{
                if (row%2 == 0){
                    c.setBackground(Color.WHITE);

                }
                else {
                    c.setBackground(alternateColor);
                }     }

       //Add below code here
                return c;
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnShow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dash Board");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jDateChooser1.setDateFormatString("dd-MMM-yyyy");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("From :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("To :");

        jTable2.setBackground(java.awt.SystemColor.control);
        jTable2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Category", "Total Sell", "Total Buy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setFocusable(false);
        jTable2.setGridColor(java.awt.SystemColor.controlHighlight);
        jScrollPane2.setViewportView(jTable2);

        btnShow.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnShow.setText("Show");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable2.getRowCount(); i++)
        {
            for(int j = 0; j < jTable2.getColumnCount(); j++) 
            {
                jTable2.setValueAt("", i, j);
            }
        }
        RowNo = 0;
        rowIncrementer = 0;
        Date time = jDateChooser1.getDate();
        Date time1 = jDateChooser2.getDate();
        
        if(time == null || time1 == null)
        {
            JOptionPane.showMessageDialog(this,"Select Date First.");
        }
        else
        {
            DateFormat formatter = new SimpleDateFormat(" dd-MMM-yyyy ");
       String date = formatter.format(time);
        String from = "'"+date+"'";
        
        DateFormat formatter1 = new SimpleDateFormat(" dd-MMM-yyyy ");
       String date1 = formatter1.format(time1);
        String to = "'"+date1+"'";
        //String itemPicture = "'"+jTextField2.getText()+"'"; 
        
        java.sql.Statement stm = null;
        ResultSet rs = null;
        try {
            stm = connection.createStatement();
            rs = stm.executeQuery("SELECT cat_name from inv_category ");
            // print the results
            while (rs.next()) {
                jTable2.setValueAt(rs.getString(1), RowNo, 0);
                String catName = "'"+rs.getString(1)+"'";
                System.out.println("CatName = "+catName);
                
                //get value from sells transaction
                java.sql.Statement stm1 = null;
                ResultSet rs1 = null;
                try {
                    stm1 = connection.createStatement();
                    rs1 = stm1.executeQuery("SELECT sum(sell_price) from inv_transaction where cat_name="+catName+" "
                            + "and to_date(tran_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs1.next()) {
                        jTable2.setValueAt(rs1.getString(1), RowNo, 1);
                        System.out.println("Sell Sum = "+rs1.getString(1));
                        //jTable2.setValueAt(rs.getString(3), RowNo, 1);
                        //jTable2.setValueAt(rs.getString(4), RowNo, 2);
                        //jTable2.setValueAt(rs.getString(5), RowNo, 3);
                        //jTable2.setValueAt(rs.getString(5).substring(0,11), RowNo, 3);
                        //RowNo++;
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error1",1);
                }finally
                {
                    DatabaseUtils.close(rs1);
                    DatabaseUtils.close(stm1);
                }
                //
                //get value from buy transaction
                java.sql.Statement stm2 = null;
                ResultSet rs2 = null;
                try {
                    stm2 = connection.createStatement();
                    rs2 = stm2.executeQuery("SELECT sum(sell_price) from buy_transaction where cat_name="+catName+" "
                            + "and to_date(tran_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs2.next()) {
                        jTable2.setValueAt(rs2.getString(1), RowNo, 2);
                        System.out.println("Buy Sum = "+rs2.getString(1));
                        //jTable2.setValueAt(rs.getString(3), RowNo, 1);
                        //jTable2.setValueAt(rs.getString(4), RowNo, 2);
                        //jTable2.setValueAt(rs.getString(5), RowNo, 3);
                        //jTable2.setValueAt(rs.getString(5).substring(0,11), RowNo, 3);
                        //RowNo++;
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error1",1);
                }finally
                {
                    DatabaseUtils.close(rs2);
                    DatabaseUtils.close(stm2);
                }
                //
                
                RowNo++;
            }
        } catch (Exception e) {
            System.out.println(e.toString());
            //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error2",1);
        }finally
                {
                    DatabaseUtils.close(rs);
                    DatabaseUtils.close(stm);
                }
         
        double TP = 0.0, p = 0.0, _vat = 0.0, _discount = 0.0, _due = 0.0, _dueForDashboard = 0.0, _dueCollection = 0.0;
        for(int j=0;j<RowNo;j++){
            String s = String.valueOf(jTable2.getValueAt(j, 1));
            //JOptionPane.showMessageDialog(rootPane, s);
            if(s.equals("null"))
            {
                p = 0.0;
            }
            else
            {
                p = Double.parseDouble(s);
            }
            System.out.println(p);
            TP += p;
        }
        double buyTotalPrice = 0.0, buyPrice = 0.0;
        for(int j=0;j<RowNo;j++){
            String s = String.valueOf(jTable2.getValueAt(j, 2));
            //JOptionPane.showMessageDialog(rootPane, s);
            if(s.equals("null"))
            {
                buyPrice = 0.0;
            }
            else
            {
                buyPrice = Double.parseDouble(s);
            }
            System.out.println(buyPrice);
            buyTotalPrice += buyPrice;
        }
        
        jTable2.setValueAt("                                       ", RowNo+rowIncrementer, 0);
        jTable2.setValueAt("", RowNo, 1);
        
        rowIncrementer++;
        jTable2.setValueAt("                 Total                    =", RowNo+rowIncrementer, 0);
        jTable2.setValueAt(TP, RowNo+rowIncrementer, 1);
        jTable2.setValueAt(buyTotalPrice, RowNo+rowIncrementer, 2);
        
        rowIncrementer++;
        jTable2.setValueAt("               VAT(+)                  =", RowNo+rowIncrementer, 0);
        //
                java.sql.Statement stm3 = null;
                ResultSet rs3 = null;
                try {
                    stm3 = connection.createStatement();
                    rs3 = stm3.executeQuery("SELECT sum(vat_amount) from inv_vat where "
                            + " to_date(vat_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs3.next()) {
                        jTable2.setValueAt(rs3.getString(1), RowNo+rowIncrementer, 1);
                         _vat = Double.parseDouble(String.valueOf(rs3.getString(1)));
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error3",1);
                }finally
                {
                    DatabaseUtils.close(rs3);
                    DatabaseUtils.close(stm3);
                }
                //
                
                rowIncrementer++;
        jTable2.setValueAt("           Discount(-)              =", RowNo+rowIncrementer, 0);
        //
                java.sql.Statement stm4 = null;
                ResultSet rs4 = null;
                try {
                    stm4 = connection.createStatement();
                    rs4 = stm4.executeQuery("SELECT sum(disc_amount) from inv_discount where "
                            + " to_date(disc_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs4.next()) {
                        jTable2.setValueAt(rs4.getString(1), RowNo+rowIncrementer, 1);
                        _discount = Double.parseDouble(String.valueOf(rs4.getString(1)));
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error4",1);
                }finally
                {
                    DatabaseUtils.close(rs4);
                    DatabaseUtils.close(stm4);
                }
                //
                
                rowIncrementer++;
        jTable2.setValueAt("          Total Due Bill(-)        =", RowNo+rowIncrementer, 0);
        //
                java.sql.Statement stm6d = null;
                ResultSet rs6d = null;
                try {
                    stm6d = connection.createStatement();
                    rs6d = stm6d.executeQuery("SELECT sum(amount) from due_bill_for_dashboard where "
                            + " to_date(bill_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs6d.next()) {
                        jTable2.setValueAt(rs6d.getString(1), RowNo+rowIncrementer, 1);
                        _dueForDashboard = Double.parseDouble(String.valueOf(rs6d.getString(1)));
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error6",1);
                }finally
                {
                    DatabaseUtils.close(rs6d);
                    DatabaseUtils.close(stm6d);
                }
                //
        
                rowIncrementer++;
        jTable2.setValueAt("        Remaining Due          =", RowNo+rowIncrementer, 0);
        //
                java.sql.Statement stm6 = null;
                ResultSet rs6 = null;
                try {
                    stm6 = connection.createStatement();
                    rs6 = stm6.executeQuery("SELECT sum(amount) from bill_due where "
                            + " to_date(bill_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs6.next()) {
                        jTable2.setValueAt(rs6.getString(1), RowNo+rowIncrementer, 1);
                        _due = Double.parseDouble(String.valueOf(rs6.getString(1)));
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error6",1);
                }finally
                {
                    DatabaseUtils.close(rs6);
                    DatabaseUtils.close(stm6);
                }
                //
                
                rowIncrementer++;
                jTable2.setValueAt("   Due Collection(+)           =", RowNo+rowIncrementer, 0);
        //
                java.sql.Statement stm7 = null;
                ResultSet rs7 = null;
                try {
                    stm7 = connection.createStatement();
                    rs7 = stm7.executeQuery("SELECT sum(amount) from due_collection where "
                            + " to_date(bill_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs7.next()) {
                        jTable2.setValueAt(rs7.getString(1), RowNo+rowIncrementer, 1);
                        _dueCollection = Double.parseDouble(String.valueOf(rs7.getString(1)));
                    }
                } catch (Exception e) {
                    System.out.println("Error at Due Collection: "+e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error7",1);
                }finally
                {
                    DatabaseUtils.close(rs7);
                    DatabaseUtils.close(stm7);
                }
                
        //Double vat = Double.parseDouble(String.valueOf(jTable2.getValueAt(RowNo+1, 1)));
        //Double discount = Double.parseDouble(String.valueOf(jTable2.getValueAt(RowNo+2, 1)));
        
                rowIncrementer++;
        double grossTP = TP + _vat - _discount - _dueForDashboard +_dueCollection - buyTotalPrice ;
        DecimalFormat df2 = new DecimalFormat( "###########0.00" );
        grossTP = new Double(df2.format(grossTP)).doubleValue();
        jTable2.setValueAt("                 Total                     =", RowNo+rowIncrementer, 0);
        jTable2.setValueAt(grossTP, RowNo+rowIncrementer, 1);
        
        rowIncrementer++;
        jTable2.setValueAt("    Advance Salary(-)         =", RowNo+rowIncrementer, 0);
        double adv = 0.0;
        java.sql.Statement stm5 = null;
                ResultSet rs5 = null;
                try {
                    stm5 = connection.createStatement();
                    rs5 = stm5.executeQuery("SELECT sum(adv_salary) from inv_employee_advance where "
                            + " to_date(adv_date) between to_date("+from+") "+ "and to_date("+to+")");
                    // print the results
                    while (rs5.next()) {
                        jTable2.setValueAt(rs5.getString(1), RowNo+rowIncrementer, 1);
                        adv = Double.parseDouble(String.valueOf(rs5.getString(1)));
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error4",1);
                }finally
                {
                    DatabaseUtils.close(rs5);
                    DatabaseUtils.close(stm5);
                }
                rowIncrementer++;
                //rowIncrementer += rowIncrementer;
                
        jTable2.setValueAt("    Card Payment(-)           =", RowNo + rowIncrementer, 0);
        double cardPay = 0.0;
        java.sql.Statement stmCard = null;
        ResultSet rsCard = null;
        try {
            stmCard = connection.createStatement();
            rsCard = stmCard.executeQuery("SELECT sum(amount) from bill_card where "
                    + " bill_date between to_date("+from+") "+" and to_date("+to+")");
            // print the results
            while (rsCard.next()) {
                jTable2.setValueAt(rsCard.getString(1), RowNo + rowIncrementer, 1);
                cardPay = Double.parseDouble(String.valueOf(rsCard.getString(1)));
            }
        } catch (Exception e) {
            System.out.println(e.toString());
            //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error4",1);
            //Utilities.setErrorLog(AdminForm.class.getSimpleName()+" initFields()", "Exception", "SELECT sum(amount) from bill_card Query Execution Error", e.toString());
        } finally {
            DatabaseUtils.close(rsCard);
            DatabaseUtils.close(stmCard);
        }        
             
        rowIncrementer++;
        grossTP1 = grossTP - adv - cardPay;
        jTable2.setValueAt("                 Total                     =", RowNo+rowIncrementer, 0);
        jTable2.setValueAt(grossTP1, RowNo+rowIncrementer, 1);
        }
    }//GEN-LAST:event_btnShowActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
                connection.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error In Closing DBConnection. Please Ignore it & Click OK.");
            }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShow;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
