/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurantpos;

import java.awt.Dimension;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.text.MessageFormat;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.TableModel;

import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.swing.JFrame;
import java.util.Properties;

/**
 *
 * @author HajjazPC
 */
public class TablePrint extends javax.swing.JFrame {

    private int lastRow =-1;
    private int RowNo;
    private double TotalPrice = 0.0;
    int _receiptNo = 0;
    int Height=0;
    String tokenSerial = "";
    /**
     * Creates new form TablePrint
     */
    public TablePrint() {
        this.RowNo = 0;
        initComponents();
    }

    public void WriteToTable(Double price, String itemName)
    {
        Double unitPrice= price, TP = 0.0;
        int qty =1,flag=0;
        String name = itemName;
        if(RowNo==0){
            jTable1.setValueAt(RowNo, RowNo, 0);
            jTable1.setValueAt(qty, RowNo, 1);
            jTable1.setValueAt(name, RowNo, 2);
            jTable1.setValueAt(unitPrice, RowNo, 3);
            jTable1.setValueAt(qty*unitPrice, RowNo, 4);
            RowNo +=1;
        }
        else{
            int k=jTable1.getRowCount(),j;
            System.out.println(k);
            for(j=0; j<k;j++ )
            {
                if(name.equals(jTable1.getValueAt(j, 2))){
                    qty = (int) jTable1.getValueAt(j, 1);
                    qty +=1;
                    flag=1;
                    break;
                }
                else
                    continue;
            }
            if(flag==1){
                jTable1.setValueAt(j, j, 0);
                jTable1.setValueAt(qty, j, 1);
                jTable1.setValueAt(name, j, 2);
                jTable1.setValueAt(unitPrice, j, 3);
                jTable1.setValueAt(qty*unitPrice, j, 4);
                //RowNo =j+1;
            }
            else{
                jTable1.setValueAt(RowNo, RowNo, 0);
                jTable1.setValueAt(qty, RowNo, 1);
                jTable1.setValueAt(name, RowNo, 2);
                jTable1.setValueAt(unitPrice, RowNo, 3);
                jTable1.setValueAt(qty*unitPrice, RowNo, 4);
                RowNo +=1;
            }
        }
        int k= jTable1.getRowCount(), j, n=RowNo;
        for(j=0;j<RowNo;j++){
            String s = String.valueOf(jTable1.getValueAt(j, 4));
            double p = Double.parseDouble(s);
            //System.out.println(p);
            TP += p;
        }    
        jTable1.setValueAt(" ", n, 0);
        jTable1.setValueAt(" ", n, 1);
        jTable1.setValueAt(" ", n, 2);
        jTable1.setValueAt("Total =", n, 3);
        jTable1.setValueAt(TP, n, 4);
        //////////////////////////////////////////
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        _btnPrint = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        _btnDeleteRow = new javax.swing.JButton();
        btnDirectPrint = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Serial", "Qty", "Name", "UnitPrice", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAlignmentX(1.0F);
        jTable1.setAlignmentY(1.0F);
        jTable1.setPreferredSize(new java.awt.Dimension(50, 220));
        jTable1.setRowHeight(14);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(1);
        }

        _btnPrint.setText("Print");
        _btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _btnPrintActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setText("jTextField1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Amount Paid (TK) :");

        jButton2.setText("Rice");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Meet");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Drinks");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        _btnDeleteRow.setText("Delete Row");
        _btnDeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _btnDeleteRowActionPerformed(evt);
            }
        });

        btnDirectPrint.setText("DirectPrint");
        btnDirectPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDirectPrintActionPerformed(evt);
            }
        });

        jButton6.setText("Smoothie");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setText("Print Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setText("TABAQ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(_btnDeleteRow)
                                .addGap(104, 104, 104)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButton7)
                        .addGap(74, 74, 74)
                        .addComponent(_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(btnDirectPrint)
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(_btnDeleteRow)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDirectPrint, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)))))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void _btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__btnPrintActionPerformed
       
        Date date = Calendar.getInstance().getTime();
         DateFormat formatter = new SimpleDateFormat(" dd/MM/yyyy, hh:mm a");
        String Time = "Date: "+formatter.format(date);
        System.out.println("RowNo ="+RowNo);
        _receiptNo++;
        String RNo = "Receipt# "+_receiptNo,Thank = "Thank You For Coming Here!", HD="For Home Delivery: 01731267763";
        String line = "----------------------------------",
                CName = "New Shad Restora", CAddress1 = "Plot# 35,Sonargaon Janapath Road,", CAddress2 = "Sector# 12, Uttara";
        String S[][] = new String[50][5];
        S[0][0] = "Qty";
        S[0][1] = "Description";
        S[0][2] = "UnitP";
        S[0][3] = "Price";
        String s;
        for(int i=0;i<=RowNo;i++){
            
            if((s=String.valueOf(jTable1.getValueAt(i, 1)))!=null){
                S[i+1][0] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 2)))!=null){
                S[i+1][1] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 3)))!=null){
                S[i+1][2] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 4)))!=null){
                S[i+1][3] =s;
            }
            
        }
        int h=1,height=0;
        Properties properties = new Properties();
        PrintJob _printJob = Toolkit.getDefaultToolkit().getPrintJob(TablePrint.this, "name", properties);
        Graphics g = _printJob.getGraphics();
        g.setFont(new Font("Courier New", Font.BOLD, 15));
        g.drawString(CName, 18, 15);
        g.setFont(new Font("Courier New", Font.BOLD, 8));
        g.drawString(CAddress1, 20, 35);
        g.drawString(CAddress2, 40, 45);
        g.drawString(RNo, 30, 60);
        g.drawString(Time, 30, 70);
        for(int j=0;j<=RowNo+1;j++){
            if(j==0){
                h =1;
                g.drawString(line, 15, 80);
                g.drawString(S[j][0], 20, 90*h);
                g.drawString(S[j][1], 40, 90*h);
                g.drawString(S[j][2], 115, 90*h);
                g.drawString(S[j][3], 150, 90*h);
                g.drawString(line, 15, 100);
                height =100;
            }
            else if(j>=1){
                h=j+1;
            g.drawString(S[j][0], 20, height+10);
            g.drawString(S[j][1], 40, height+10);
            g.drawString(S[j][2], 115, height+10);
            g.drawString(S[j][3], 150, height+10);
            height+=10;
            }
        }
        g.drawString(Thank, 20, height+15);
        g.drawString(HD, 20, height+25);
        g.dispose();
        _printJob.end();
        
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            for(int j = 0; j < jTable1.getColumnCount(); j++) 
            {
                jTable1.setValueAt("", i, j);
            }
        }
        RowNo = 0;
    }//GEN-LAST:event__btnPrintActionPerformed

    private void printCard() {

        PrinterJob printjob = PrinterJob.getPrinterJob();
        printjob.setJobName("Label");
        
        Printable printable;
        printable = new Printable() {
            
            @Override
            public int print(Graphics pg, PageFormat pf, int pageNum) throws PrinterException {
                 //To change body of generated methods, choose Tools | Templates.
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                
                //Dimension size = jLayeredPane2.getSize();
                //BufferedImage bufferedImage = new BufferedImage(size.width, size.height, BufferedImage.TYPE_INT_RGB);
                
                //jLayeredPane2.print(bufferedImage.getGraphics());
                
                Graphics2D g = (Graphics2D) pg;
                g.translate(pf.getImageableX(), pf.getImageableY());
                Date date = Calendar.getInstance().getTime();
         DateFormat formatter = new SimpleDateFormat(" dd/MM/yyyy, hh:mm a");
        String Time = "Date: "+formatter.format(date);
        System.out.println("RowNo ="+RowNo);
        _receiptNo++;
        String RNo = "Receipt# "+_receiptNo,Thank = "Thank You For Coming Here!", vatReg = "Vat Reg# 18011057968", HD="For Home Delivery: 01731267763";
        String line = "----------------------------------",
                CName = "New Shad Restora", CAddress1 = "Plot# 35,Sonargaon Janapath Road,", CAddress2 = "Sector# 12, Uttara, Dhaka 1230";
        String S[][] = new String[50][5];
        S[0][0] = "Qty";
        S[0][1] = "Description";
        S[0][2] = "UnitP";
        S[0][3] = "Price";
        String s;
        for(int i=0;i<=RowNo;i++){
            
            if((s=String.valueOf(jTable1.getValueAt(i, 1)))!=null){
                S[i+1][0] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 2)))!=null){
                S[i+1][1] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 3)))!=null){
                S[i+1][2] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 4)))!=null){
                S[i+1][3] =s;
            }
            System.out.println("S["+i+"] = "+S[i][0]);
        }
        int h=1 ,height=0;;
//        Properties properties = new Properties();
//        PrintJob _printJob = Toolkit.getDefaultToolkit().getPrintJob(TablePrint.this, "name", properties);
//        
//        Graphics g = _printJob.getGraphics();
        String imagePath = "E:\\POS\\Hajjaz\\RestaurantPOS_Oracle_NewShad_Last_Modified_2017_03_11\\RestaurantPOS\\src\\com\\images\\New.png";
        Image img = Toolkit.getDefaultToolkit().getImage(imagePath);
        g.drawImage(img, 1, 1, rootPane);
        g.setFont(new Font("Courier New", Font.BOLD, 14));
        g.drawString(CName, 50, 15);
        g.setFont(new Font("Courier New", Font.BOLD, 8));
        g.drawString(CAddress1, 20, 35);
        g.drawString(CAddress2, 20, 45);
        g.drawString(vatReg+"  "+RNo, 20, 60);
        g.drawString(Time, 20, 70);
        for(int j=0;j<=RowNo+1;j++){
            if(j==0){
                h =1;
                g.drawString(line, 15, 80);
                g.drawString(S[j][0], 20, 90*h);
                g.drawString(S[j][1], 40, 90*h);
                g.drawString(S[j][2], 115, 90*h);
                g.drawString(S[j][3], 150, 90*h);
                g.drawString(line, 15, 100);
                height =100;
            }
            else if(j>=1){
                h=j+1;
            g.drawString(S[j][0], 20, height+10);
            g.drawString(S[j][1], 40, height+10);
            g.drawString(S[j][2], 115, height+10);
            g.drawString(S[j][3], 150, height+10);
            height+=10;
            }
        }
        g.drawString(Thank, 20, height+15);
        g.drawString(HD, 20, height+25);
        g.dispose();
        Height += height+35;
//        _printJob.end();
        
        
                
                return Printable.PAGE_EXISTS;
            }
            
        };

        
        Paper paper = new Paper();
        paper.setImageableArea(0, 0, 253, Height);
        //paper.setSize(243, 154);

        PageFormat format = new PageFormat();
        format.setPaper(paper);
        //format.setOrientation(PageFormat.LANDSCAPE);

        printjob.setPrintable(printable, format);
//        if (printjob.printDialog() == false)
//                return;

        try {
                printjob.print();
        } catch (PrinterException ex) {
                System.out.println("NO PAGE FOUND." + ex);

        }
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            for(int j = 0; j < jTable1.getColumnCount(); j++) 
            {
                jTable1.setValueAt("", i, j);
            }
        }
        RowNo = 0;
    }
    
    private void printToken(String serialToken) {

        tokenSerial = serialToken;
        PrinterJob printjob = PrinterJob.getPrinterJob();
        printjob.setJobName("Label");
        
        Printable printable;
        printable = new Printable() {
            
            @Override
            public int print(Graphics pg, PageFormat pf, int pageNum) throws PrinterException {
                 //To change body of generated methods, choose Tools | Templates.
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                
                //Dimension size = jLayeredPane2.getSize();
                //BufferedImage bufferedImage = new BufferedImage(size.width, size.height, BufferedImage.TYPE_INT_RGB);
                
                //jLayeredPane2.print(bufferedImage.getGraphics());
                
                Graphics2D g = (Graphics2D) pg;
                g.translate(pf.getImageableX(), pf.getImageableY());
                Date date = Calendar.getInstance().getTime();
         DateFormat formatter = new SimpleDateFormat(" dd/MM/yyyy");
        String Time = "Valid for : "+formatter.format(date);
        System.out.println("RowNo ="+RowNo);
        String CName = "New Shad Restora", CAddress1 = "Plot# 35, Sonargaon Janapath Road", 
        CAddress2 = "Sector# 12, Uttara, Dhaka 1230", CAddress3 ="Phone No: 01778110011 ";
        
        int h=1 ,height=0;;
//        Properties properties = new Properties();
//        PrintJob _printJob = Toolkit.getDefaultToolkit().getPrintJob(TablePrint.this, "name", properties);
//        
        //Graphics g = _printJob.getGraphics();
        g.setFont(new Font("Courier New", Font.BOLD, 16));
        g.drawString("UBER", 70, 15);
        g.setFont(new Font("Courier New", Font.BOLD, 14));
        g.drawString("Onboarding Festival", 20, 30);
        
        g.setFont(new Font("Courier New", Font.BOLD, 16));
        g.drawString("Token# "+tokenSerial, 35, 60);
        
        g.setFont(new Font("Courier New", Font.BOLD, 14));
        g.drawString(CName, 35, 90);
        
        g.setFont(new Font("Courier New", Font.BOLD, 8));
        g.drawString(CAddress1, 20, 110);
        g.drawString(CAddress2, 20, 120);
        g.drawString(CAddress3, 20, 130);
        g.drawString(Time, 20, 140);
        g.dispose();
//        _printJob.end();
        
                return Printable.PAGE_EXISTS;
            }
            
        };

        
        Paper paper = new Paper();
        paper.setImageableArea(0, 0, 253, 200);
        //paper.setSize(243, 154);

        PageFormat format = new PageFormat();
        format.setPaper(paper);
        //format.setOrientation(PageFormat.LANDSCAPE);

        printjob.setPrintable(printable, format);
//        if (printjob.printDialog() == false)
//                return;

        try {
                printjob.print();
        } catch (PrinterException ex) {
                System.out.println("NO PAGE FOUND." + ex);

        }
    }
    
    private void printTabaq() {

        PrinterJob printjob = PrinterJob.getPrinterJob();
        printjob.setJobName("Label");
        
        Printable printable;
        printable = new Printable() {
            
            @Override
            public int print(Graphics pg, PageFormat pf, int pageNum) throws PrinterException {
                 //To change body of generated methods, choose Tools | Templates.
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                
                //Dimension size = jLayeredPane2.getSize();
                //BufferedImage bufferedImage = new BufferedImage(size.width, size.height, BufferedImage.TYPE_INT_RGB);
                
                //jLayeredPane2.print(bufferedImage.getGraphics());
                
                Graphics2D g = (Graphics2D) pg;
                g.translate(pf.getImageableX(), pf.getImageableY());
                Date date = Calendar.getInstance().getTime();
         DateFormat formatter = new SimpleDateFormat(" dd/MM/yyyy, hh:mm a");
        String Time = "Date: "+formatter.format(date);
        System.out.println("RowNo ="+RowNo);
        String CName = "TABAQ";
        
        int h=1 ,height=0;;
//        Properties properties = new Properties();
//        PrintJob _printJob = Toolkit.getDefaultToolkit().getPrintJob(TablePrint.this, "name", properties);
//        
//        Graphics g = _printJob.getGraphics();
        //g.setFont(new Font("Courier New", Font.BOLD, 16));
        g.setFont(new Font("Arial", Font.BOLD, 14));
        g.drawString(CName, 80, 35);
        g.setFont(new Font("Arial", Font.PLAIN, 8));
        g.drawString("Shop 5C 023, Level 5, JFP [WIFI: hazelnut]", 25, 50);
        g.drawString("Vat Reg. No: 18141128416", 45, 90);
        g.drawString("[MUSAK-11/11(KA)], Rule - 16(1)", 40, 100);
        g.drawString("----------------------------------------------------------------------------------", 0, 110);
        g.drawString("201708220109134                          Murad", 15, 117);
        g.drawString("Counter ID 01        22-Aug-2017         6:32:54PM", 15, 133);
        //g.drawString("5:54:58PM", 100, 100);
        g.drawString("-----------------------------------------------------------------------------------", 0, 140);
        
        g.setFont(new Font("Arial", Font.PLAIN, 9));
        g.drawString("Item Name", 15, 180);g.drawString("Rate", 85, 180);g.drawString("QTY", 117, 180);g.drawString("Price", 172, 180);
        g.drawLine(15, 183, 60, 183);g.drawLine(85, 183, 103, 183);g.drawLine(117, 183, 127, 183);g.drawLine(171, 183, 191, 183);
        
        g.drawString("Cheesecake", 15, 195);g.drawString("104", 84, 195);g.drawString("5", 122, 195);g.drawString("521.75", 165, 195);
        g.drawString("Brownie", 15, 205);
        
        g.drawString("Chicken Tikka", 15, 215);g.drawString("191", 84, 215);g.drawString("3", 122, 215);g.drawString("573.90", 165, 215);
        g.drawString("Sandwich", 15, 225);
        
        g.drawString("OREO", 15, 235);g.drawString("174", 84, 235);g.drawString("1", 122, 235);g.drawString("173.91", 165, 235);
        g.drawString("Cheesecake", 15, 245);
        g.drawString("Bar", 15, 255);
        
        g.drawLine(75, 265, 195, 265);
        g.drawString("Total Amount", 70, 275);g.drawString("1,269.56", 158, 275);
        g.drawString(" VAT Amount+", 70, 285);g.drawString("190.43", 165, 285);
        g.drawString("Discount Amount-", 56, 295);g.drawString("0.00", 175, 295);
        g.drawLine(75, 305, 195, 305);
        g.drawString("Net Amount", 71, 315);g.drawString("1,460.00", 158, 315);
        g.drawString("Paid Amount", 70, 325);g.drawString("1,460.00", 158, 325);
        g.drawString("Change Amount", 56, 335);g.drawString("0.00", 175, 335);
        g.drawString("Paid Type", 78, 345);
        
        g.drawLine(15, 355, 195, 355);
        g.setFont(new Font("Arial", Font.PLAIN, 8));
        g.drawString("System By: Mediasoft Data Systems Ltd.", 30, 365);
        g.drawString("Tel-913 4045", 75, 375);
        
        g.dispose();
//        _printJob.end();
        
                return Printable.PAGE_EXISTS;
            }
            
        };

        
        Paper paper = new Paper();
        paper.setImageableArea(0, 0, 253, 378);
        //paper.setSize(243, 154);

        PageFormat format = new PageFormat();
        format.setPaper(paper);
        //format.setOrientation(PageFormat.LANDSCAPE);

        printjob.setPrintable(printable, format);
//        if (printjob.printDialog() == false)
//                return;

        try {
                printjob.print();
        } catch (PrinterException ex) {
                System.out.println("NO PAGE FOUND." + ex);

        }
    }
    
    private void printImage() {

        PrinterJob printjob = PrinterJob.getPrinterJob();
        printjob.setJobName("Label");
        
        Printable printable;
        printable = new Printable() {
            
            @Override
            public int print(Graphics pg, PageFormat pf, int pageNum) throws PrinterException {
                 //To change body of generated methods, choose Tools | Templates.
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                
                //Dimension size = jLayeredPane2.getSize();
                //BufferedImage bufferedImage = new BufferedImage(size.width, size.height, BufferedImage.TYPE_INT_RGB);
                
                //jLayeredPane2.print(bufferedImage.getGraphics());
                
                Graphics2D g = (Graphics2D) pg;
                g.translate(pf.getImageableX(), pf.getImageableY());
                Date date = Calendar.getInstance().getTime();
         DateFormat formatter = new SimpleDateFormat(" dd/MM/yyyy, hh:mm a");
        String Time = "Date: "+formatter.format(date);
        System.out.println("RowNo ="+RowNo);
        _receiptNo++;
        String RNo = "Receipt# "+_receiptNo,Thank = "Thank You For Coming Here!", vatReg = "Vat Reg# 18011057968", HD="For Home Delivery: 01731267763";
        String line = "----------------------------------",
                CName = "New Shad Restora", CAddress1 = "Plot# 35,Sonargaon Janapath Road,", CAddress2 = "Sector# 12, Uttara, Dhaka 1230";
        String S[][] = new String[50][5];
        S[0][0] = "Qty";
        S[0][1] = "Description";
        S[0][2] = "UnitP";
        S[0][3] = "Price";
        String s;
        for(int i=0;i<=RowNo;i++){
            
            if((s=String.valueOf(jTable1.getValueAt(i, 1)))!=null){
                S[i+1][0] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 2)))!=null){
                S[i+1][1] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 3)))!=null){
                S[i+1][2] =s;
            }
            if((s=String.valueOf(jTable1.getValueAt(i, 4)))!=null){
                S[i+1][3] =s;
            }
            System.out.println("S["+i+"] = "+S[i][0]);
        }
        int h=1 ,height=0;;
//        Properties properties = new Properties();
//        PrintJob _printJob = Toolkit.getDefaultToolkit().getPrintJob(TablePrint.this, "name", properties);
//        
//        Graphics g = _printJob.getGraphics();
        String imagePath = "E:\\POS\\POS\\RestaurantPOS_Oracle_NewShad_Last_Modified_2017_07_10\\RestaurantPOS\\src\\com\\images\\New.png";
        Image img = Toolkit.getDefaultToolkit().getImage(imagePath);
        g.setFont(new Font("Courier New", Font.BOLD, 14));
        g.drawImage(img, 1, 1, rootPane);
//        g.setFont(new Font("Courier New", Font.BOLD, 8));
//        g.drawString(CAddress1, 20, 35);
//        g.drawString(CAddress2, 20, 45);
//        g.drawString(vatReg+"  "+RNo, 20, 60);
//        g.drawString(Time, 20, 70);
//        for(int j=0;j<=RowNo+1;j++){
//            if(j==0){
//                h =1;
//                g.drawString(line, 15, 80);
//                g.drawString(S[j][0], 20, 90*h);
//                g.drawString(S[j][1], 40, 90*h);
//                g.drawString(S[j][2], 115, 90*h);
//                g.drawString(S[j][3], 150, 90*h);
//                g.drawString(line, 15, 100);
//                height =100;
//            }
//            else if(j>=1){
//                h=j+1;
//            g.drawString(S[j][0], 20, height+10);
//            g.drawString(S[j][1], 40, height+10);
//            g.drawString(S[j][2], 115, height+10);
//            g.drawString(S[j][3], 150, height+10);
//            height+=10;
//            }
//        }
//        g.drawString(Thank, 20, height+15);
//        g.drawString(HD, 20, height+25);
        g.dispose();
        Height += height+300;
//        _printJob.end();
        
        
                
                return Printable.PAGE_EXISTS;
            }
            
        };

        
        Paper paper = new Paper();
        paper.setImageableArea(0, 0, 253, Height);
        //paper.setSize(243, 154);

        PageFormat format = new PageFormat();
        format.setPaper(paper);
        //format.setOrientation(PageFormat.LANDSCAPE);

        printjob.setPrintable(printable, format);
//        if (printjob.printDialog() == false)
//                return;

        try {
                printjob.print();
        } catch (PrinterException ex) {
                System.out.println("NO PAGE FOUND." + ex);

        }
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            for(int j = 0; j < jTable1.getColumnCount(); j++) 
            {
                jTable1.setValueAt("", i, j);
            }
        }
        RowNo = 0;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        WriteToTable(25.00,"Rice");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        WriteToTable(80.00,"Meat");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        WriteToTable(50.00,"Pepsi 1L");
         
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String S[][] = new String[20][5];
        S[0][0] = "Serial";
        S[0][1] = "Qty";
        S[0][2] = "Name";
        S[0][3] = "UnitP";
        S[0][4] = "Price";
        //for(int i=0;i<2;i++){
            System.out.println(S[0][0]+"\t"+S[0][1]+"\t"+S[0][2]+"\t"+S[0][3]+"\t"+S[0][4]);
        try {
            //}
            PrintWriter out = new PrintWriter(new FileWriter("example.ps"));
            //for(int i=0;i<5;i++){
                //out.println(S[0][i]+"\t");
                out.println(S);
            //}
        } catch (IOException ex) {
            Logger.getLogger(TablePrint.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void _btnDeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__btnDeleteRowActionPerformed
        // TODO add your handling code here:
       int Selectedrow,j;
       String data[][] = new String[20][20];
       String data1[][] = new String[20][20];
       Selectedrow = jTable1.getSelectedRow();
        for(int i=0;i<=RowNo;i++ ){
                data[i][0]=String.valueOf(jTable1.getValueAt(i, 0));
                data[i][1]=String.valueOf(jTable1.getValueAt(i, 1));
                data[i][2]=String.valueOf(jTable1.getValueAt(i, 2));
                data[i][3]=String.valueOf(jTable1.getValueAt(i, 3));
                data[i][4]=String.valueOf(jTable1.getValueAt(i, 4));
        }
        
        for(int i=0;i<RowNo;i++){
            if(i>=Selectedrow){
                data1[i][0]=data[i+1][0];
                data1[i][1]=data[i+1][1];
                data1[i][2]=data[i+1][2];
                data1[i][3]=data[i+1][3];
                data1[i][4]=data[i+1][4];
            }
            else{
                data1[i][0]=data[i][0];  data1[i][1]=data[i][1];  data1[i][2]=data[i][2];
                data1[i][3]=data[i][3];  data1[i][4]=data[i][4];
            }
        }
        
        for(int k=0;k<jTable1.getRowCount();k++){
            jTable1.setValueAt("", k, 0);   jTable1.setValueAt("", k, 1);
            jTable1.setValueAt("", k, 2);   jTable1.setValueAt("", k, 3);
            jTable1.setValueAt("", k, 4);
        }
        double p,Tprice=0.0;
        for(j=0;j<RowNo-1;j++){
            jTable1.setValueAt(data1[j][0], j, 0);
            jTable1.setValueAt( Integer.parseInt(data1[j][1]), j, 1);
            jTable1.setValueAt(data1[j][2], j, 2);
            jTable1.setValueAt(data1[j][3], j, 3);
            jTable1.setValueAt(data1[j][4], j, 4);
            p = Double.parseDouble(data1[j][4]);
            Tprice +=p;
        }
        RowNo -=1;
        /*for(int i=0;i<RowNo;i++)
        {
            jTable1.setValueAt(i, i, 0);
        }*/
        System.out.println("RowNo ="+RowNo);
        System.out.println(data1[0][0]+","+data1[0][1]+","+data1[0][2]+","+data1[0][3]+","+data1[0][4]+"\n");
        System.out.println(data1[1][0]+","+data1[1][1]+","+data1[1][2]+","+data1[1][3]+","+data1[1][4]+"\n");
        System.out.println(data1[2][0]+","+data1[2][1]+","+data1[2][2]+","+data1[2][3]+","+data1[2][4]+"\n");
        System.out.println(data1[3][0]+","+data1[3][1]+","+data1[3][2]+","+data1[3][3]+","+data1[3][4]+"\n");
    }//GEN-LAST:event__btnDeleteRowActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        int r = jTable1.getSelectedRow(),qt;
        if(r<RowNo){
        String s = String.valueOf(jTable1.getValueAt(r, 3)),sq=String.valueOf(jTable1.getValueAt(r, 1));
        double up = Double.parseDouble(s),TP=0.0;
        qt = Integer.parseInt(sq);
        jTable1.setValueAt(up*qt, r, 4);
        
        int k= jTable1.getRowCount(), j, n=RowNo;
        for(j=0;j<RowNo;j++){
            String s1 = String.valueOf(jTable1.getValueAt(j, 4));
            double p = Double.parseDouble(s1);
            //System.out.println(p);
            TP += p;
        }  
        jTable1.setValueAt(" ", n, 0);
        jTable1.setValueAt(" ", n, 1);
        jTable1.setValueAt(" ", n, 2);
        jTable1.setValueAt("Total =", n, 3);
        jTable1.setValueAt(TP, n, 4);
        }
        }
        //////////////////////////////////////////
    }//GEN-LAST:event_jTable1KeyPressed

    private void btnDirectPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDirectPrintActionPerformed
        // TODO add your handling code here:
        DecimalFormat dFormater = new DecimalFormat("000");
        String fromatedString = "";
        for(int i = 1; i<=30; i++){
            fromatedString = dFormater.format(i);
            printToken(fromatedString);
        }
        
        //printCard();
    }//GEN-LAST:event_btnDirectPrintActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        WriteToTable(25.00,"Choco Smoothie");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        printImage();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        printTabaq();
    }//GEN-LAST:event_jButton7ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablePrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablePrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablePrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablePrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablePrint().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton _btnDeleteRow;
    private javax.swing.JButton _btnPrint;
    private javax.swing.JButton btnDirectPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
