/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurantpos;

import Utilities.ReadWriteExcelFile;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author hajjaz.bin.ibrahim
 */
public class Export_To_Excel extends javax.swing.JFrame {

    List<String> listName = new ArrayList<String>();
    List<String> listQuantity = new ArrayList<String>();
    List<String> listSumPrice = new ArrayList<String>();
    List<String> listBalance = new ArrayList<String>();
    List<String> listDate = new ArrayList<String>();
    public DBGateway dbg;;
    Connection connection = null;
    int RowNo;
    int inv_cat_id;
    /**
     * Creates new form Export_To_Excel
     */
    public Export_To_Excel() {
        
        this.dbg = new DBGateway();
        
            initComponents();
            connection = dbg.connectionTest();
            listName.add("Name");
            listQuantity.add("Quantity");
            listSumPrice.add("Price(Sum)");
            listBalance.add("Balance");
            listDate.add("Date");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export To Excel");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("From :");

        jDateChooser1.setDateFormatString("dd-MMM-yyyy");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("To :");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Export to Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(72, 72, 72)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RowNo = 0;
        String from = "", to = "";
        Date time = jDateChooser1.getDate();
        Date time1 = jDateChooser2.getDate();

        if (time == null || time1 == null) {
            JOptionPane.showMessageDialog(this, "At First Select Date Then Click to Export.");
        } else {
            String folder = "";
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Choose a Folder");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                folder = chooser.getSelectedFile().toString();
                DateFormat formatter = new SimpleDateFormat(" dd-MMM-yyyy ");
                String date = formatter.format(time);
                from = "'" + date + "'";

                DateFormat formatter1 = new SimpleDateFormat(" dd-MMM-yyyy ");
                String date1 = formatter1.format(time1);
                to = "'" + date1 + "'";

                java.sql.Statement stm = null;
                ResultSet rs = null;
                try {
                    stm = connection.createStatement();
                    rs = stm.executeQuery("SELECT item_name,item_quantity,cat_id from inv_item");
                    // print the results
                    while (rs.next()) {
                        listName.add(rs.getString(1));
                        listBalance.add(rs.getString(2));
                        String itemName = "'" + rs.getString(1) + "'";
                        String catId =  rs.getString(3);
                        String catName = getCategory_Name(catId);
                        //
                        java.sql.Statement stm1 = null;
                        ResultSet rs1 = null;
                        try {
                            stm1 = connection.createStatement();
                            rs1 = stm1.executeQuery("SELECT sum(item_quantity),sum(sell_price) FROM inv_transaction where cat_name = '"+catName+"' "
                            + "and item_name = "+itemName+ " and tran_date between to_date(" + from + ") "
                                    + "and to_date(" + to + ")");
                            // print the results
                            while (rs1.next()) {
                                System.out.println("Hajjaz sum(item_quantity): "+rs1.getString(1)+",sum(sell_price): "+rs1.getString(2));
                                listQuantity.add(rs1.getString(1));
                                listSumPrice.add(rs1.getString(2));
                                //listDate.add(rs1.getString(3));
                            }
                        } catch (Exception e) {
                            System.out.println(e.toString());
                            //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error1",1);
                        } finally {
                            DatabaseUtils.close(rs1);
                            DatabaseUtils.close(stm1);
                        }
                        //

                        RowNo++;
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                    //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error2",1);
                } finally {
                    DatabaseUtils.close(rs);
                    DatabaseUtils.close(stm);
                }

                File fileName = new File(folder + "\\" + from + "_to_" + to + ".xlsx");
                ReadWriteExcelFile readWriteExcel = new ReadWriteExcelFile(fileName);
                String str = "";
                try {
                    str = readWriteExcel.WriteExcelFile(listName, listQuantity, listSumPrice, listBalance);
                } catch (IOException ex) {
                    Logger.getLogger(Export_To_Excel.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (str.equals("Successfull")) {
                    String s = fileName.getAbsolutePath();
                    JOptionPane.showMessageDialog(this, "File Generated Successfully.\n" + s);
                } else {
                    JOptionPane.showMessageDialog(this, "File Generation Failed.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Select a Folder to Save the File.");
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private String getCategory_Name(String categoryID)
    {
        String catName = "";
        String catID = "'"+categoryID+"'";
        java.sql.Statement stm1 = null;
        ResultSet rs = null;
        try {
            stm1 = connection.createStatement();
            rs = stm1.executeQuery("SELECT * FROM inv_category where cat_id = "+catID +"");
            // print the results
            while (rs.next()) {
                catName = rs.getString(2).toString();
                
            }
        } catch (Exception e) {
            System.out.println(e.toString());
            //JOptionPane.showMessageDialog(rootPane, e.toString(),"Error",1);
        }finally
        {
            DatabaseUtils.close(rs);
            DatabaseUtils.close(stm1);
        }
        return catName;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Export_To_Excel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Export_To_Excel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Export_To_Excel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Export_To_Excel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Export_To_Excel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
